{"version":3,"sources":["user_profile.js","App.js","reportWebVitals.js","index.js"],"names":["User","UserGithub","props","state","username","githubUrl","avatarUrl","user_id","user_login","repos","followers","following","$","get","this","source","result","console","log","data","setState","name","html_url","avatar_url","id","login","public_repos","src","herf","React","Component","ReactDOM","render","document","getElementById","output","push","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"iPA8DeA,EA1DJ,WAAK,IACNC,EADK,kDAEP,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,SAAU,GACVC,UAAU,GACVC,UAAW,GACXC,QAAQ,GACRC,WAAW,GACXC,MAAM,GACNC,UAAU,GACVC,UAAU,IAVC,EAFZ,qDAgBP,WAAqB,IAAD,OAChBC,IAAEC,IAAIC,KAAKZ,MAAMa,QAAQ,SAACC,GACtBC,QAAQC,IAAIF,GACZ,IAAMG,EAAOH,EACTG,GACA,EAAKC,SAAS,CACVhB,SAAUe,EAAKE,KACfhB,UAAWc,EAAKG,SAChBhB,UAAUa,EAAKI,WACfhB,QAAQY,EAAKK,GACbhB,WAAWW,EAAKM,MAChBhB,MAAMU,EAAKO,aACXhB,UAAUS,EAAKT,UACfC,UAAUQ,EAAKR,iBA7BxB,oBAkCP,WACI,OACI,gCACI,qBAAKgB,IAAKb,KAAKX,MAAMG,YACrB,wCAAWQ,KAAKX,MAAMK,cACtB,uCAAUM,KAAKX,MAAMC,YACrB,qCAAQU,KAAKX,MAAMI,WACnB,sDAAyBO,KAAKX,MAAMM,SACpC,4CAAeK,KAAKX,MAAMO,aAC1B,8CAAiBI,KAAKX,MAAMQ,aAC5B,mBAAGiB,KAAMd,KAAKX,MAAME,UAApB,gCA5CL,GACcwB,IAAMC,WAgD/BC,IAASC,OACL,cAAC/B,EAAD,CAAYc,OAAS,wCACrBkB,SAASC,eAAe,SAE5B,IAAIC,EAAO,GAEX,OADAA,EAAOC,KAAK,cAACnC,EAAD,KACLkC,GC/CIE,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,8BAAMtC,SCKGuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdT,IAASC,OACP,cAAC,IAAMgB,WAAP,UACE,cAAC,EAAD,MAEFf,SAASC,eAAe,SAM1BK,M","file":"static/js/main.8b33ec1c.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport $ from 'jquery';\r\n\r\nconst User=()=>{\r\n    class UserGithub extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                username: '',\r\n                githubUrl:'',\r\n                avatarUrl: '',\r\n                user_id:'',\r\n                user_login:'',\r\n                repos:'',\r\n                followers:'',\r\n                following:'',\r\n            }\r\n          \r\n        }\r\n        componentDidMount() {\r\n            $.get(this.props.source, (result)=> {\r\n                console.log(result);\r\n                const data = result;\r\n                if (data) {\r\n                    this.setState({\r\n                        username: data.name,\r\n                        githubUrl: data.html_url,\r\n                        avatarUrl:data.avatar_url,\r\n                        user_id:data.id,\r\n                        user_login:data.login,\r\n                        repos:data.public_repos,\r\n                        followers:data.followers,\r\n                        following:data.following\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        render() {\r\n            return(\r\n                <div>\r\n                    <img src={this.state.avatarUrl}/>\r\n                    <h3>Login:{this.state.user_login}</h3>\r\n                    <h4>Name:{this.state.username}</h4>\r\n                    <h3>ID:{this.state.user_id}</h3>\r\n                    <h3>public repositories:{this.state.repos}</h3>\r\n                    <h3>followers:{this.state.followers}</h3>\r\n                    <h3>followering:{this.state.following}</h3>\r\n                    <a herf={this.state.githubUrl}>Github Link</a>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    ReactDOM.render(\r\n        <UserGithub source = \"https://api.github.com/users/jie151\"/>,\r\n        document.getElementById('root')\r\n    );\r\n    var output=[];\r\n    output.push(<UserGithub/>)\r\n    return output\r\n}\r\n\r\nexport default User;\r\n\r\n","//import logo from './logo.svg';\nimport './App.css';\nimport User from './user_profile';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>{User()}</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}